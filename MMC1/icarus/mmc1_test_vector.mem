// The values will be active throughout the M2 cycle
// msb -> lsb: nROMSEL, PPUA[2:0], CPU_D0, CPU_D7, CPU_A13, CPU_A14, CPU_RnW

// Padding

0_000_00_01_1  		// Skipped by negedge circuitry nature
0_000_00_01_1 		// Cycle 0
0_000_00_01_1 		// Cycle 1
0_000_00_01_1		// Cycle 2

// Cycle 3..
// Add more of your experiments with MMC1

// Read SRAM (0x6000...0x7fff)

0_000_00_01_1 		//
0_000_00_01_1 		//
1_000_00_11_1  		// "lda 0x6000" 
0_000_00_01_1 		//

// Write SRAM (0x6000...0x7fff)

0_000_00_01_1 		//
0_000_00_01_1 		//
1_000_00_11_0 		// "sta 0x6000"
0_000_00_01_1 		//


// Reset

0_000_00_01_1 		// 
0_000_00_01_1 		// 
0_000_01_01_0 		// "sta 0x8000"  (a = 0x80)
0_000_00_01_1 		//



// Set Reg3 = 0b11101  (0x1d)
// The cycles of the real 6502 are simulated (for STA the actual write occurs on the 3rd cycle. The lsr instruction takes 2 cycles. The last cycle is always Fetch)

0_000_00_01_1 		// 
0_000_00_01_1 		// 
0_000_10_11_0 		// "sta 0xE000"    1   (lsb)
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		// 
0_000_00_01_1 		// 
0_000_00_11_0 		// "sta 0xE000"    0
0_000_00_01_1 		// 

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		//
0_000_00_01_1 		// 
0_000_10_11_0 		// "sta 0xE000"    1
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		// 

0_000_00_01_1 		//
0_000_00_01_1 		//
0_000_10_11_0 		// "sta 0xE000"    1
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		// 
0_000_00_01_1 		//
0_000_10_11_0 		// "sta 0xE000"    1   (msb)
0_000_00_01_1 		// 



// Set Reg2 = 0b10110  (0x16)

0_000_00_01_1 		// 
0_000_00_01_1 		// 
0_000_00_01_0 		// "sta 0xС000"    0   (lsb)
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		// 
0_000_00_01_1 		// 
0_000_10_01_0 		// "sta 0xС000"    1
0_000_00_01_1 		// 

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		//
0_000_00_01_1 		// 
0_000_10_01_0 		// "sta 0xС000"    1
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		// 

0_000_00_01_1 		//
0_000_00_01_1 		//
0_000_00_01_0 		// "sta 0xС000"    0
0_000_00_01_1 		//

0_000_00_01_1 		// "lsr a"
0_000_00_01_1 		//

0_000_00_01_1 		// 
0_000_00_01_1 		//
0_000_10_01_0 		// "sta 0xС000"    1   (msb)
0_000_00_01_1 		// 
